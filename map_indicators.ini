# https://docs.python.org/3/library/configparser.html
# each time a new retailer use CGI MAP :  add its name to retailers =
# the corresponfing files are to create {retailer}{separator}{table} in the maindir
[Main]
mainDirLinux = /media/internaldiskmount/ocboulot/Projets/F3/CGIMapIndicatorsMainDir
mainDirWindows = c:\ocboulot\Projets\F3\CGIMapIndicatorsMainDir
iniFilesDir = iniFiles
SQLiteDB = map_indicators.db
retailers = jules
                pimkie
separator = _
file_ext = .csv
tables = adm_user
            adm_role
            adm_profile
            adm_profile_user
            adm_profile_role
            request_history

toolkit_tables = path
                    user_access
log_level = DEBUG
# log_level = DEBUG|INFO|WARNING|ERROR|CRITICAL

[Sessions]
prefix = Session
context = date
# context = date | datetime
backup_name = map.db

[Queries]
connected_at_least_once = select entreprise, team, iif(access_$brand = '1', 'Mettre Ã  jour', iif(access_$brand = '2', 'Consultation', access_$brand)) as access_type, connected_at_least_once, count(*) as sum_of_users from
                            (
                                select entreprise, team, mail, access_$brand, iif(req_user is null, 'No connection at all :', 'at least one connection :') as connected_at_least_once 
                                from user_access 
                                left join (select req_user from request_history where req_date > '2022-03-15' group by req_user) as request_history
                                on user_access.user_map = request_history.req_user
                                where
                                user_access.access_$brand in (1,2)
                                and user_access.doNotBotherWith_connectionReminder is null
                                and entreprise = 'CGI'
                                order by entreprise, team, access_jules, mail
                            )
                            group by 1, 2, 3, 4
                            order by 1, 2, 3

connected_at_least_once_v2 = select aggone as Teams, sum_of_users_with_no_connection, sum_of_users_with_at_least_one_connection from (
                                select * from (
                                    select (entreprise || ' ' || team) as aggone, connected_at_least_once as no_connection, count(*) as sum_of_users_with_no_connection from
                                                                (
                                                                    select entreprise, team, mail, access_$brand, iif(req_user is null, 'No connection at all :', 'at least one connection :') as connected_at_least_once 
                                                                    from user_access 
                                                                    left join (select req_user from request_history where req_date > '2022-03-15' group by req_user) as request_history
                                                                    on user_access.user_map = request_history.req_user
                                                                    where
                                                                    user_access.access_$brand in (1,2)
                                                                    and user_access.doNotBotherWith_connectionReminder is null
                                                                    and user_access.deleted is null
                                                                    and entreprise = 'CGI'
                                                                    order by entreprise, team, access_$brand, mail
                                                                )
                                                                where connected_at_least_once = 'No connection at all :'
                                                                group by aggone, no_connection
                                                                order by 1
                                ) as one
                                join
                                (select * from (
                                    select (entreprise || ' ' || team) as aggtwo, connected_at_least_once, count(*) as sum_of_users_with_at_least_one_connection from
                                                                (
                                                                    select entreprise, team, mail, access_$brand, iif(req_user is null, 'No connection at all :', 'at least one connection :') as connected_at_least_once 
                                                                    from user_access 
                                                                    left join (select req_user from request_history where req_date > '2022-03-15' group by req_user) as request_history
                                                                    on user_access.user_map = request_history.req_user
                                                                    where
                                                                    user_access.access_$brand in (1,2)
                                                                    and user_access.doNotBotherWith_connectionReminder is null
                                                                    and user_access.deleted is null
                                                                    and entreprise = 'CGI'
                                                                    order by entreprise, team, access_$brand, mail
                                                                )
                                                                where connected_at_least_once = 'at least one connection :'
                                                                group by aggtwo, connected_at_least_once
                                                                order by 1
                                )) as two
                            on one.aggone = two.aggtwo
                            )
request_history = select
                        req_user
                        , adm_user.start_date
                        , adm_user.end_date
                        , mail
                        , entreprise
                        , team
                        , doNotBotherWith_connectionReminder
                        , deleted
                        , user_access.access_$brand as access_type_from_user_acess
                        , adm_profile_user.profile_id as access_type_from_cgi_map
                        , iif(instr(substr(request_history.path, 2), '/') == 0, request_history.path, substr(request_history.path, 1, instr(substr(request_history.path, 2), '/'))) as curated_path
                        , request_history.path as full_path
                        , path.read
                        , path.write
                        , date(req_date) as access_date_to_path
                    from
                        adm_user
                    join
                        user_access
                            on adm_user.login = user_access.user_map
                    join
                        request_history
                            on request_history.req_user = adm_user.login
                    JOIN
                        path 
                            on path.path = iif(instr(substr(request_history.path, 2), '/') == 0, request_history.path, substr(request_history.path, 1, instr(substr(request_history.path, 2), '/')))
                    JOIN
                        adm_profile_user
                            on adm_profile_user.user_id = adm_user.id_user
                    where
                        req_date > '2022-03-14' 
                        and req_user not in ('cMoreau', 'mapRoot', 'CoralieDO', 'SYSTEM')
